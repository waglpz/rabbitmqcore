{
  "name": "waglpz/rabbitmqcore",
  "description": "WAG RabbitMQ",
  "license": "MIT",
  "type": "library",
  "minimum-stability": "stable",
  "prefer-stable": true,
  "config": {
    "optimize-autoloader": true,
    "apcu-autoloader": true,
    "discard-changes": true,
    "preferred-install": "dist",
    "sort-packages": true,
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true,
      "phpstan/extension-installer": true
    }
  },
  "require": {
    "php": "^8.2",
    "ext-json": "*",
    "ext-mbstring": "*",
    "ext-sockets": "*",
    "php-amqplib/php-amqplib": "^3.5",
    "webmozart/assert": "^1.11"
  },
  "require-dev": {
    "doctrine/coding-standard": "^11.1",
    "phpstan/extension-installer": "^1.1",
    "phpstan/phpstan": "^1.10",
    "phpstan/phpstan-deprecation-rules": "^1.0",
    "phpstan/phpstan-doctrine": "^1.3",
    "phpstan/phpstan-phpunit": "^1.1",
    "phpstan/phpstan-strict-rules": "^1.5",
    "phpstan/phpstan-symfony": "^1.1",
    "phpstan/phpstan-webmozart-assert": "^1.1",
    "phpunit/phpunit": "^10.0",
    "roave/security-advisories": "dev-latest",
    "squizlabs/php_codesniffer": "^3.7",
    "symfony/var-dumper": "^5.4"
  },
  "autoload": {
    "psr-4": {
      "WAG\\RabbitMq\\": "src"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "WAG\\RabbitMq\\Tests\\": "tests"
    }
  },
  "scripts": {
    "waglpz:check:ci": [ "@waglpz:check:normal" ],
    "waglpz:check:normal": [
      "@waglpz:code:style:check",
      "@waglpz:code:analyse",
      "@waglpz:test:normal"
    ],
    "waglpz:code:analyse": [ "phpstan analyse --configuration=phpstan.neon src/ tests/ --level max" ],
    "waglpz:code:style:check": "phpcs -p",
    "waglpz:code:style:fix": "phpcbf -p",
    "waglpz:generate:password": "php bin/generate-password.php",
    "waglpz:test:normal": "phpunit --colors=always tests --no-coverage --order-by random",
    "waglpz:test:coverage": "phpunit --colors=always tests",
    "waglpz:test:ci": "phpunit --colors=always tests --no-coverage --no-logging --do-not-cache-result --order-by random",
    "post-create-project-cmd": [
      "bash -c 'printf APPUID=$(id -u);  > .env'",
      "bash -c 'printf APPUGID=$(id -g) >> .env'"
    ],
    "post-install-cmd": [
      "sh bin/makedotenv.sh"
    ]
  }
}
